{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-wellison-martins"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ds_generic_delimited_text')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_data_lake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containerName": {
						"type": "string"
					},
					"directoryName": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					},
					"separatorFile": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directoryName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containerName",
							"type": "Expression"
						}
					},
					"columnDelimiter": {
						"value": "@dataset().separatorFile",
						"type": "Expression"
					},
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generic_delimited_text2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_data_lake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containerName": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					},
					"separatorFile": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containerName",
							"type": "Expression"
						}
					},
					"columnDelimiter": {
						"value": "@dataset().separatorFile",
						"type": "Expression"
					},
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generic_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_data_lake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containerName": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containerName",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generic_parquet_dataflow')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_data_lake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containerName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": {
							"value": "@dataset().containerName",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/json_generic_api')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_data_lake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containerName": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().fileName,'.json')",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containerName",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/powerquery1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "ds_fixo_table_cliente",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ds_fixo_table_cliente",
							"dataset": {
								"referenceName": "ds_fixo_table_cliente",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared ds_fixo_table_cliente = let AdfDoc = Sql.Database(\"sql-wellison-martins.database.windows.net\", \"sqlbd-wellison-martins\", [CreateNavigationProperties = false]), InputTable = AdfDoc{[Schema=\"SalesLT\",Item=\"Customer\"]}[Data] in InputTable;\r\nshared UserQuery = let Source = #\"ds_fixo_table_cliente\",\r\n  #\"Removed columns\" = Table.RemoveColumns(Source, {\"PasswordHash\", \"Phone\", \"SalesPerson\", \"Suffix\", \"MiddleName\", \"NameStyle\", \"Title\"}),\r\n  #\"Added custom\" = Table.AddColumn(#\"Removed columns\", \"NomeCompleto\", each [FirstName] & \" \" & [LastName]) in #\"Added custom\";\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_COPYDATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "EXCEL_TO_DATA_LAKE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "DT_INSERT",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_fixo_xlsx_cor",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_generic_azuresql",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "SalesLT",
									"tableName": "TB_PlanCor"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_COPYDATA2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL_TO_SQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_generic_azuresql",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "SalesLT",
									"tableName": "TB_ADF_COPY_SOURCE"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_generic_azuresql",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "SalesLT",
									"tableName": "TB_ADF_COPY_TARGET"
								}
							}
						]
					},
					{
						"name": "COPYSQL_TO_DATALAKE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SQL_TO_SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT* FROM [SalesLT].[TB_ADF_COPY_TARGET]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_generic_azuresql",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "*",
									"tableName": "*"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_generic_delimited_text2",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "raw",
									"fileName": "COPY_TARGET.CSV",
									"separatorFile": ";"
								}
							}
						]
					},
					{
						"name": "COPYSQLLOCAL_TO_DATALAKE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT [COD_LOCAL]\n      ,[NOME]\n      ,[CIDADE]\n      ,[BAIRRO]\n      ,[ESTADO]\n  FROM [EVENTOS].[IMERSAO].[LOCALIZACAO]\n  WHERE ESTADO = 'PE'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_generic_dblocal",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "*",
									"tableName": "*"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_generic_delimited_text2",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "raw",
									"fileName": {
										"value": "@concat('localizacao',formatDateTime(utcnow(), 'yyyy-MM-dd'))",
										"type": "Expression"
									},
									"separatorFile": ";"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_COPYDATAAPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "API_TO_DATALAKE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "json_movies",
								"type": "DatasetReference",
								"parameters": {
									"tokenApi": "sY9KTeKv2CdlmCS72ETTdYbnPGpFhUuS",
									"relativeURL": "critics/all.json?"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "json_generic_api",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "raw",
									"fileName": "criticas_filmes"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/json_generic_api')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_GETMETADATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata FILE",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_generic_delimited_text2",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "transient",
									"fileName": "cidades.csv",
									"separatorFile": ";"
								}
							},
							"fieldList": [
								"columnCount"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get Metadata FILE2",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Metadata FILE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_generic_delimited_text",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "transient",
									"directoryName": {
										"value": "@toLower('')",
										"type": "Expression"
									},
									"fileName": "moviesDB.csv",
									"separatorFile": ","
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get Metadata FOLDER",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Metadata FILE2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_generic_delimited_text",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "transient",
									"directoryName": {
										"value": "@toLower('')",
										"type": "Expression"
									},
									"fileName": {
										"value": "@toLower('')",
										"type": "Expression"
									},
									"separatorFile": {
										"value": "@toLower('')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get Metadata TABLE",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Metadata FOLDER",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_generic_azuresql",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "SalesLT",
									"tableName": "TB_PlanCor"
								}
							},
							"fieldList": [
								"structure"
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text2')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_GETMETADATA_FOREACH_FILTER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Files_transient",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_generic_delimited_text",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "transient",
									"directoryName": {
										"value": "@toLower('')",
										"type": "Expression"
									},
									"fileName": {
										"value": "@toLower('')",
										"type": "Expression"
									},
									"separatorFile": {
										"value": "@toLower('')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter_txt",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Files_transient",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Files_transient').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name, '.txt')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter_txt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter_txt').output.value",
								"type": "Expression"
							},
							"batchCount": 5,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_generic_delimited_text2",
											"type": "DatasetReference",
											"parameters": {
												"containerName": "transient",
												"fileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"separatorFile": ";"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_generic_parquet",
											"type": "DatasetReference",
											"parameters": {
												"containerName": "raw",
												"fileName": {
													"value": "@replace(item().name, '.txt', '')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text2')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_LOOKUP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Controller",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_generic_delimited_text",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "raw",
									"directoryName": "controller",
									"fileName": "controller_tables.csv",
									"separatorFile": ";"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Lookup csv singleton",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup Controller",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_generic_delimited_text2",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "transient",
									"fileName": "cidades.csv",
									"separatorFile": ";"
								}
							}
						}
					},
					{
						"name": "Lookup table singleton",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup csv singleton",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_generic_azuresql",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "SalesLT",
									"tableName": "TB_PlanCor"
								}
							}
						}
					},
					{
						"name": "Lookup csv array",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup table singleton",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_generic_delimited_text2",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "transient",
									"fileName": "cidades.csv",
									"separatorFile": ";"
								}
							}
						}
					},
					{
						"name": "Lookup table array",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup csv array",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_generic_dblocal",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "IMERSAO",
									"tableName": "artista"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Lookup table array query",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup table array",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES \n  WHERE TABLE_TYPE='BASE TABLE'\n  and TABLE_SCHEMA = 'IMERSAO'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_generic_dblocal",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "*",
									"tableName": "*"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_LOOKUP_FOREACH_FILTER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Controller",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_generic_delimited_text",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "raw",
									"directoryName": "controller",
									"fileName": "controller_tables.csv",
									"separatorFile": ";"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter_tables_ativas",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lookup Controller",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Controller').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().load_table, '1')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter_tables_ativas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter_tables_ativas').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "sqllocal_to_lake",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_generic_dblocal",
											"type": "DatasetReference",
											"parameters": {
												"schemaName": {
													"value": "@item().schema_source",
													"type": "Expression"
												},
												"tableName": {
													"value": "@item().table_source",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_generic_delimited_text2",
											"type": "DatasetReference",
											"parameters": {
												"containerName": {
													"value": "@item().container_target",
													"type": "Expression"
												},
												"fileName": {
													"value": "@concat(item().file_target,'.csv')",
													"type": "Expression"
												},
												"separatorFile": ";"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL_POWER_QUERY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "EXEC_PowerQuery",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "powerquery1",
								"type": "DataFlowReference",
								"datasetParameters": {
									"ds_fixo_table_cliente": {},
									"UserQuerydsgenericazuresql": {
										"schemaName": "SalesLT",
										"tableName": "ClienteCustomizado"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"queries": [
								{
									"queryName": "UserQuery",
									"dataflowSinks": [
										{
											"name": "UserQuerydsgenericazuresql",
											"dataset": {
												"referenceName": "ds_generic_azuresql",
												"type": "DatasetReference",
												"parameters": {
													"schemaName": "SalesLT",
													"tableName": "ClienteCustomizado"
												}
											},
											"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> UserQuerydsgenericazuresql"
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/powerquery1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DATAFLOW_ARTISTA')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_generic_delimited_text2",
								"type": "DatasetReference"
							},
							"name": "sArtista"
						},
						{
							"dataset": {
								"referenceName": "ds_generic_delimited_text2",
								"type": "DatasetReference"
							},
							"name": "sEventoArtista"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_generic_azuresql",
								"type": "DatasetReference"
							},
							"name": "sinkSQL"
						},
						{
							"dataset": {
								"referenceName": "ds_generic_parquet_dataflow",
								"type": "DatasetReference"
							},
							"name": "sinkCSV"
						}
					],
					"transformations": [
						{
							"name": "renameArtista"
						},
						{
							"name": "renameEventoArtista"
						},
						{
							"name": "colunaCalculadaEventoArtista"
						},
						{
							"name": "joinArtistaEventoArtista"
						},
						{
							"name": "groupbyValorPgtoArtista"
						},
						{
							"name": "split1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          COD_ARTISTA as short,",
						"          CPF as long,",
						"          NOME as string,",
						"          COD_ESTILO as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false) ~> sArtista",
						"source(output(",
						"          CODIGO as short,",
						"          VALOR_PGTO as double,",
						"          DT_PGTO as string,",
						"          FKCOD_ARTISTA as short,",
						"          FKCOD_EVENTO as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false) ~> sEventoArtista",
						"sArtista select(mapColumn(",
						"          COD_ARTISTA,",
						"          NOME_ARTISTA = NOME",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> renameArtista",
						"sEventoArtista select(mapColumn(",
						"          eaVALOR_PGTO = VALOR_PGTO,",
						"          eaFKCOD_ARTISTA = FKCOD_ARTISTA,",
						"          eaFKCOD_EVENTO = FKCOD_EVENTO",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> renameEventoArtista",
						"renameEventoArtista derive(valorpgto_dobrado = eaVALOR_PGTO*2) ~> colunaCalculadaEventoArtista",
						"renameArtista, colunaCalculadaEventoArtista join(COD_ARTISTA == eaFKCOD_ARTISTA,",
						"     joinType:'left',",
						"     broadcast: 'auto')~> joinArtistaEventoArtista",
						"joinArtistaEventoArtista aggregate(groupBy(NOME_ARTISTA),",
						"     faturamento_total = sum(valorpgto_dobrado)) ~> groupbyValorPgtoArtista",
						"groupbyValorPgtoArtista split(faturamento_total > 200000,",
						"     disjoint: false) ~> split1@(sinkSQL, sinkCSV)",
						"split1@sinkSQL sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sinkSQL",
						"split1@sinkCSV sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['faturamento_negativo.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sinkCSV"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text2')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_parquet_dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL_FLOW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exec Data Flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DATAFLOW_ARTISTA",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sArtista": {
										"containerName": "bronze",
										"fileName": "artista.csv",
										"separatorFile": ";"
									},
									"sEventoArtista": {
										"containerName": "bronze",
										"fileName": "evento_artista.csv",
										"separatorFile": ";"
									},
									"sinkSQL": {
										"schemaName": "SalesLT",
										"tableName": "faturamento_positivo_artista"
									},
									"sinkCSV": {
										"containerName": "trusted"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DATAFLOW_ARTISTA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORQUESTRADOR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY_COPYDATA",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "COPY_COPYDATA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "COPY_LOOKUP",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "COPY_COPYDATA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "COPY_LOOKUP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/COPY_COPYDATA')]",
				"[concat(variables('factoryId'), '/pipelines/COPY_LOOKUP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_CALEND')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TRIGGER_SCHEDULE",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ORQUESTRADOR",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2022-05-18T20:40:00",
						"timeZone": "E. South America Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ORQUESTRADOR')]"
			]
		}
	]
}